{"version":3,"sources":["Components/Section/Section.jsx","Components/FeedbackOptions/FeedbackOptions.jsx","Components/Statistics/Statistics.jsx","Components/Notification/Notification.jsx","App.jsx","index.js"],"names":["Section","title","children","id","FeedbackOptions","options","onLeaveFeedback","className","styles","buttons","map","option","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","state","onBtnClick","nameValue","setState","prevState","countTotalFeedback","Object","values","reduce","accum","value","countPositiveFeedbackPercentage","positiveFeedbacks","Math","round","this","objKeys","keys","totalFeedback","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAGe,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACrC,OACI,gCACI,oBAAIC,GAAG,SAAP,SAAkBF,IACjBC,K,oBCHE,SAASE,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAEjD,OAEE,qBAAKC,UAAWC,IAAOC,QAAvB,SAECJ,EAAQK,KAAI,SAAAC,GAAM,OACjB,wBACEC,KAAK,SAELC,QAASP,EAAgBK,GAH3B,SAKGA,GAHIA,QCTb,IAaeG,EAbI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OAEX,+BAEI,wCAAYJ,KACZ,2CAAeC,KACf,uCAAWC,EAAX,OAGA,yCAAaC,EAAb,OACJ,qBAAIf,GAAG,SAAP,iCAAsCgB,EAAtC,YCXO,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACnC,OAAO,6BAAKA,I,IC0EDC,E,4MAnEbC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAIPO,WAAa,SAAAC,GAAS,OAAI,WACxB,EAAKC,UAAS,SAAAC,GAAS,sBAClBF,EAAYE,EAAUF,GAAa,Q,EAI1CG,mBAAqB,WAGnB,OAFkBC,OAAOC,OAAO,EAAKP,OACJQ,QAAO,SAACC,EAAOC,GAAR,OAAkBD,EAAQC,M,EAIpEC,gCAAkC,WAChC,IAAMC,EAAoB,EAAKZ,MAAL,KAM1B,OAH+Ba,KAAKC,MAAOF,EAAoB,EAAKP,qBAAwB,M,4CAM9F,WACE,MAA+BU,KAAKf,MAA5BR,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBsB,EAAUV,OAAOW,KAAKF,KAAKf,OAC3BkB,EAAgB1B,EAAOC,EAAUC,EAGvC,OAEE,oCAEE,cAACjB,EAAD,CAAUC,MAAO,wBAAjB,SAEE,cAACG,EAAD,CACAC,QAASkC,EACTjC,gBAAiBgC,KAAKd,eAIvBiB,EAAgB,EAAI,cAACzC,EAAD,CAASC,MAAO,YAAhB,SAEnB,cAAC,EAAD,CACAc,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOoB,KAAKV,qBACZT,mBAAoBmB,KAAKJ,sCAI3B,cAACd,EAAD,CAAcC,QAAQ,6B,GA5DZqB,aCJlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.c04b262d.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\n\nexport default function Section({ title, children }) {\n    return (\n        <div >\n            <h2 id=\"blink3\" >{title}</h2>\n            {children}\n        </div>\n    );\n}\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.element.isRequired,\n};","import PropTypes from 'prop-types';\nimport styles from '../../App.css';\n\n\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\n  \n  return (\n  \n    <div className={styles.buttons}\n>\n    {options.map(option => (\n      <button\n        type=\"button\"\n        key={option}\n        onClick={onLeaveFeedback(option)}\n      >\n        {option}\n      </button>))}\n  </div>\n    )\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\n\n\n\n\n","import PropTypes from 'prop-types';\n\n\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) =>\n        \n        <ul>\n            {/* Statistic indicators */}\n            <li >Good: {good}</li>\n            <li >Neutral: {neutral}</li>\n            <li >Bad: {bad} </li>\n\n            {/* Statistic methods */}\n            <li >Total: {total} </li>\n        <li id=\"blink6\" >Positive feedbacks: {positivePercentage} %</li>\n        </ul>\n\nexport default Statistics\n\n\n\nStatistics.propTypes = {\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n    positivePercentage: PropTypes.number.isRequired,\n};","import PropTypes from 'prop-types';\n\n\nexport default function Notification({ message }) {\n    return <h2>{message}</h2>;\n}\n\nNotification.propTypes = {\n    message: PropTypes.string.isRequired,\n};","import React, { Component } from 'react';\n\nimport Section from './Components/Section/';\nimport FeedbackOptions from './Components/FeedbackOptions/';\nimport Statistics from './Components/Statistics';\nimport Notification from './Components/Notification';\n\n// import styles from './App.css';\n\nclass App extends Component {\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  // Increment function on buttons\n  onBtnClick = nameValue => () => {\n    this.setState(prevState => (\n      { [nameValue]: prevState[nameValue] + 1 })\n    );\n  };\n  // Count total feedbacks function \n  countTotalFeedback = () => {\n    const objValues = Object.values(this.state)\n    const totalFeedbacks = objValues.reduce((accum, value) => accum + value)\n    return (totalFeedbacks)\n  }\n  // Count Positive feedbacks function \n  countPositiveFeedbackPercentage = () => {\n    const positiveFeedbacks = this.state['good']\n    // console.log(positiveFeedbacks);\n\n    const totalPositiveFeedbacks = Math.round((positiveFeedbacks / this.countTotalFeedback()) * 100)\n    // console.log(totalPositiveFeedbacks);\n\n    return (totalPositiveFeedbacks)\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const objKeys = Object.keys(this.state);\n    const totalFeedback = good + neutral + bad;\n\n\n    return (\n  \n      <section >\n        \n        <Section  title={'Please leave feedback'}>\n\n          <FeedbackOptions \n          options={objKeys}\n          onLeaveFeedback={this.onBtnClick} />\n\n      </Section>\n\n        {totalFeedback > 0 ? <Section title={'Statistic'}>\n\n          <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={this.countTotalFeedback()}\n          positivePercentage={this.countPositiveFeedbackPercentage()} />\n\n        </Section> :           \n        \n        <Notification message=\"No feedback given\" />\n        }\n\n\n        </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}